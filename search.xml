<?xml version="1.0" encoding="utf-8"?>
<search>
  
    
    <entry>
      <title><![CDATA[Hexo搭建Github博客（二）- Hexo配置和使用]]></title>
      <url>%2F2016%2F11%2F18%2FHexo%E6%90%AD%E5%BB%BAGithub%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%BA%8C%EF%BC%89-Hexo%E9%85%8D%E7%BD%AE%E5%92%8C%E4%BD%BF%E7%94%A8%2F</url>
      <content type="text"><![CDATA[这篇博文主要介绍Hexo的配置安装和Hexo的常用命令，还有如何部署博客到Github。 前提条件：&gt; 电脑上已配置nodejs环境，因为要用到nodejs的包管理器npm。 Hexo安装打开Git命令行，执行如下命令npm install -g hexo 初始化博客 在电脑上建立自己的博客文件夹（如：D:\Software\Blog，这个目录就是博客根目录），然后在此目录下打开Git Bash，执行如下命令hexo init这是会输出12INFO Copying data e:\HexoINFO You are almost done! Don&apos;t forget to run `npm install` before you start blogging with Hexo! 在博客根目录下会生成以下文件： * _config.yml ——是博客主要配置文件 * db.json——是博客数据库 * node_modules——是NodeJS依赖模块 * source——是博客内容以及其他页面（page）存在的目录，这个目录里面有个_post目录就是我们存放博客内容的地方，也就是存放博客内容markdown文档地方，输入hexo new “newPage”就会在这个目录建立一个名为newPage的子目录，然后在里面放入md文档，并在主题的配置文件里面添加相应栏目newPage，这样就会显示在主页面的目录上。（将在后续有所mark） * themes——是主题存放文件 至此，博客的安装部署工作基本完成了。blog就是你的博客根目录，所有的操作都在里面进行。 Hexo命令生成静态页面hexo generate（hexo g也可以） 本地启动启动本地服务，进行文章预览调试，命令：hexo server （hexo s也可以）浏览器输入http://localhost:4000/ 即可访问自己的博客（此处是预览效果），按ctrl+c停止。 创建文章启动server后，运行一下命令，可生成一篇文章，刷新http://localhost:4000/ 即可看到新生成的文章。hexo new &quot;new_article&quot;同时在D:\Software\Blog\source_posts目录下生成一个“new_article ”的markdown文件，可以使用markdown语法的编辑器来编辑该文件，刷新http://localhost:4000/在本地查看效果。 生成静态网页hexo generate同时在博库根目录下public文件夹中生成静态文件。 部署到Github至此我们可以在本地访问自己的博客了，要部署到github上才能被别人看到。我们在本地调试好文章在推送上去。下面是部署到Github上的过程。 创建github page在自己的github中创建了自己的github page。参考Hexo 搭建Github 博客 （一）- 环境搭建 修改站点配置文件修改博客根目录下_config.yml文件： 1234# Deployment## Docs: http://hexo.io/docs/deployment.htmldeploy: type: 内容改成：1234deploy: type: git repo: https://github.com/ZhengSY1222/zhengsy1222.github.io.git branch: master 然后执行命令：npm install hexo-deployer-git --save 然后执行配置命令：hexo deploy 过程中会提示输入你的github的账号和密码，等命令运行完成。然后再浏览器中输入http://zhengsy1222.github.io/就行了（你把zhengsy1222改成你的github账号就行了）。 部署步骤每次部署的步骤，可按以下三步来进行123hexo clean #删除已经生成的静态页面hexo generatehexo deploy 一些常用命令1234567hexo new&quot;postName&quot; #新建文章hexo new page&quot;pageName&quot; #新建页面hexo generate #生成静态页面至public目录hexo server #开启预览访问端口（默认端口4000，&apos;ctrl + c&apos;关闭server）hexo deploy #将.deploy目录部署到GitHubhexo help # 查看帮助hexo version #查看Hexo的版本 命令简写12345hexo s -g #生成静态文件并启动本地服务hexo n == hexo newhexo g == hexo generatehexo s == hexo serverhexo d == hexo deploy]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Hexo搭建Github博客（一）- 环境搭建]]></title>
      <url>%2F2016%2F11%2F18%2FHexo%E6%90%AD%E5%BB%BAGithub%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%B8%80%EF%BC%89-%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%2F</url>
      <content type="text"><![CDATA[个人看法,github不图谋利，相当于一个数据源库，提供了丰富的数据库自己在做项目的过程中可以借鉴他人的开源代码，使用很方便，可以通过git 实现代码的托管，最重要的是免费使用，速度快而且还稳定，毕竟逼格那么高，就凑合着用吧，一回生，二回熟！！！ 设置Github注册github地址：https://github.com/按照提示注册就可以了，注册成功去验证邮箱。 创建github仓库仓库的名字要和你的账号对应，然后选择Create repositpry 常见成功后，会生成一个链接网址，此网址在后面配置主题时要用到。 安装Git + NodeJS环境安装Git用于推送hexo的内容到github上下载地址：https://git-scm.com/download/win打开效果是这样的： 安装NodeJS用来生成静态网页下载地址：https://nodejs.org/en/安装时保持默认配置就可以了。 进入github page页面设置页面选择settings创建一个默认的页面 直接选择Launch automatic page generator，其他东西都不用修改。 选择一个主题。 查看效果至此，github page已经创建完成，可以访问自己的站点了。如：http://zhengsy1222.github.io/效果就是上一步中你所选的主题，后面我们可以根据自己的喜好选择主题。 我选择的是next主题，后面我将继续介绍next主题的配置。]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Python]]></title>
      <url>%2F2016%2F11%2F10%2FPython%2F</url>
      <content type="text"><![CDATA[python是一门脚本语言有序列表 元组 列表 字典 图片]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[亲爱的]]></title>
      <url>%2F2016%2F11%2F04%2F%E4%BA%B2%E7%88%B1%E7%9A%84%2F</url>
      <content type="text"><![CDATA[我这周都做了什么明天回家后天见爸妈参加姐姐婚礼有序列表 桔子 香蕉 苹果 无序列表 UI PHP JavaEE 链接百度 图片]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>%2F2016%2F10%2F29%2Fhello-world%2F</url>
      <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
    </entry>

    
  
  
</search>
