<?xml version="1.0" encoding="utf-8"?>
<search>
  
    
    <entry>
      <title><![CDATA[利用fcgi_exp对php-fpm进行远程利用]]></title>
      <url>%2F2016%2F11%2F19%2F%E5%88%A9%E7%94%A8fcgi-exp%E5%AF%B9php-fpm%E8%BF%9B%E8%A1%8C%E8%BF%9C%E7%A8%8B%E5%88%A9%E7%94%A8%2F</url>
      <content type="text"><![CDATA[&gt; PHP-FPM是一个PHPFastCGI管理器，是只用于PHP的。 Php-fpm环境搭建nginx + php-pfm 搭建好了之后配置php-fpm1sudo vim /etc/php-fpm.d/www.conf 12Listen=0.0.0.0:9000 (修改); listen.allowed_clients = 127.0.0.1 (前面添加注释 分号) 搭建nginx + php-fpm 环境 1yum install php-fpm 安装golang123cd /usr/local/src/wget -c http://golangtc.com/static/go/go1.4beta1.linux-amd64.tar.gztar zxvf /root/go1.4beta1.linux-amd64.tar.gz 设置系统环境变量 vim /etc/profile 123export GOROOT=/usr/local/src/goexport GOBIN=$GOROOT/binexport PATH=$PATH:$GOBIN 编译使其生效：1source /etc/profile 验证：1go version 安装fcgi_exp1[root@localhost go]#go build /usr/local/fcgi_exp/fcgi_exp.go 至此，测试环境搭建完成！ 漏洞利用nmap扫描查看9000端口是否开启关闭防火墙:Service iptables stop 查id 尝试向web路径下写文件1vim /etc/nginx/nginx.conf 通过nginx的配置文件查找到web路径：/usr/share/nginx/html 1echo &quot;&lt;?php phpinfo();?&gt;&quot; &gt; /usr/share/nginx/html/2.php 尝试写入phpinfo1./fcgi_exp phpinfo 192.168.141.110 9000 /usr/share/nginx/html/1.php &gt; 1.html fcgi_exp目录下会生成1.html vim 1.html 查看服务器配置信息。 但是依旧不能读取文件：]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Tomcat Manager管理界面Getshell]]></title>
      <url>%2F2016%2F11%2F19%2FTomcat-Manager%E7%AE%A1%E7%90%86%E7%95%8C%E9%9D%A2Getshell%2F</url>
      <content type="text"><![CDATA[0x00【课前小菜】1、Apache是web服务器，html容器，可同构插件支持php；2、Tomcat是应用（java）服务器，jsp/servlet容器，用于发布jsp以及java的；3、Apache可以单方向的访问Tomcat的资源；4、Tomcat manager/html弱口令管理界面 （tomcat—tomcat，admin–admin） 0x01【课上消化】登录：http://10.22.66.6:8080/manager/html用户名和密码：tomact tomact zipzip.jsp =========》zipzip.zip ========》zipzip.war 压缩 修改压缩包后缀 注：这里需要说明一下，压缩的时候.rar格式是不能上传成功的。。。 上传成功后会自动生成一个与压缩包同名的文件。 访问该刚上传的文件：http://10.22.66.6:8080/zipzip/zipzip.jsp 输入密码“admin”回车，即可访问通过webshell得到服务器权限。服务器的一些信息: 执行命令 文件操作 0x03【修补漏洞】漏洞根源Tomcat漏洞是由于tomcat-users.xml文件引起的。该文件保存了Tomcat后台登录的用户和密码，并且在默认状态下成功的登录者获得的是manager权限即管理员权限。下面是默认状态下的tomcat-users.xml文件的部分内容：该文件路径： /opt/apache-tomcat-8.5.4/conf/tomcat-users.xml 漏洞修补1234A.改用户名和密码B.修改权限 &lt;user username=&quot;tomcat&quot; password=&quot;tomcat&quot; roles=&quot;manager-gui&quot;/&gt; 去掉roles属性里的manager，然后重启tomcat。因为tomcat重启时会重新加载配置文件。]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Hexo搭建GitHub博客（三）- Next主题配置使用]]></title>
      <url>%2F2016%2F11%2F18%2FHexo%E6%90%AD%E5%BB%BAGitHub%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%B8%89%EF%BC%89-Next%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE%E4%BD%BF%E7%94%A8%2F</url>
      <content type="text"><![CDATA[NexT是一款简洁优雅且易于使用的主题，配置比较简单，只需要稍微修改配置文件即可，功能也比较全，分类、归档、标签显示明了，让人一看就知道干嘛的。 NexT主题官方文档还算详细，但是有些部分的介绍不够详细，这里我做部分补充，并对自己做了修改的部分作介绍。 Hexo 有两份主要的配置文件（_config.yml），一份位于站点根目录下，另一份位于主题目录下。为了描述方便，在以下说明中，将前者称为站点配置文件，后者称为主题配置文件。 NexT主题安装下载NexT主题12$ cd your-hexo-site`$ git clone https://github.com/iissnan/hexo-theme-next themes/next 修改站点配置文件修改站点配置文件_config.yml，找到以下部分 1234# Extensions## Plugins: http://hexo.io/plugins/## Themes: http://hexo.io/themes/theme: landscape 修改为 12345# Extensions## Plugins: http://hexo.io/plugins/## Themes: http://hexo.io/themes/# theme: landscapetheme: next 至此，NexT主题就安装好了，非常方便，在Hexo中切换主题只需修改站点配置文件中theme属性来配置，想换就换。 选择SchemeNexT 通过 Scheme 提供主题中的主题。Mist是NexT主题自带的主题，可以通过修改主题配置文件中的scheme属性获得。 12# Schemesscheme: Mist #去掉默认的注释即可切换为Mist主题 默认主题: Mist主题： 菜单设置NexT主题菜单设置，用于设置博客上方导航栏，在主题配置文件中修改。 1234567menu: home: / #主页 categories: /categories #分类页（需手动创建） #about: /about #关于页面（需手动创建） archives: /archives #归档页 tags: /tags #标签页（需手动创建） #commonweal: /404.html #公益 404 （需手动创建） 只是在menu选项中设置还不能让标签页面、分类页面生效，需要我们手动创建 标签页面1&gt;运行以下命令 1hexo new page &quot;tags&quot; 同时，在/source目录下会生成一个tags文件夹，里面包含一个index.md文件2&gt;修改/source/tags目录下的index.md文件 12345title: tagsdate: 2015-09-29 14:37:02type: &quot;tags&quot;--- 3&gt;修改主题配置文件去掉tags的注释 1234567menu: home: / #主页 categories: /categories #分类页（需手动创建） #about: /about #关于页面（需手动创建） archives: /archives #归档页 tags: /tags #标签页（需手动创建） #commonweal: /404.html #公益 404 （需手动创建） 分类页面1&gt;运行以下命令 1hexo new page &quot;categories&quot; 同时，在/source目录下会生成一个categories文件夹，里面包含一个index.md文件2&gt;修改/source/categories目录下的index.md文件 12345title: categoriesdate: 2015-09-29 14:47:21type: &quot;categories&quot;--- 3&gt;修改主题配置文件去掉categories的注释 1234567menu: home: / #主页 categories: /categories #分类页（需手动创建） #about: /about #关于页面（需手动创建） archives: /archives #归档页 tags: /tags #标签页（需手动创建） #commonweal: /404.html #公益 404 （需手动创建） 侧边栏头像设置编辑站点配置文件，增加avatar字段 12# 头像avatar: /images/avatar.png 头像图片须放置在主题的/source/images/目录下 多说评论系统使用多说前要注册自己的多说账号，并创建一个站点。 1&gt; 登录-&gt;选择首页的”我要安装” 2&gt; 创建站点 红色所指部分是你的duoshuo_shortname（如：我的duoshuo_shortname就是zhiho）3&gt; 修改站点配置文件在站点配置文件中增加duoshuo_shortname字段，duoshuo_shortname就是上一步中你填写的值。 12# 多说duoshuo_shortname: zhiho 至此，当你重新访问你的博客时，在每篇博文后面就会有多说的评论框。但是，你会发现在分类页和标签页也会看到评论框，如果你感觉不爽可以通过下面的方法去掉。 去除分类页标签页多说评论修改站点的/source/categories/目录下的index.md文件 1234title: categoriesdate: 2015-09-18 21:46:42type: &quot;categories&quot;comments: false #去除多说评论框 同样修改站点的/source/tagss/目录下的index.md文件即可去掉标签页的评论框 站点访问计数站点访问计数我使用的是不蒜子使用非常方便，只需一行脚本+一行标签 显示站点总访问量我们使用的是hexo，所以要找到网站的布局文件，不同的主题的布局文件可能不一样，下面教程是针对NexT主题做出的修改。找到站点的themes/next/layout/_partials目录下的footer.swig文件将以下脚本和标签插入到文件中 1234&lt;script async src=&quot;https://dn-lbstatics.qbox.me/busuanzi/2.3/busuanzi.pure.mini.js&quot;&gt;&lt;/script&gt;本站总访问量 &lt;span id=&quot;busuanzi_value_site_pv&quot;&gt;&lt;/span&gt; &amp;nbsp&amp;nbsp&amp;nbsp您是第&lt;span id=&quot;busuanzi_value_site_uv&quot;&gt;&lt;/span&gt;个来到的小伙伴 插入到这里 1234567891011121314&lt;div class=&quot;powered-by&quot;&gt; &#123;&#123; __(&apos;footer.powered&apos;, &apos;&lt;a class=&quot;theme-link&quot; href=&quot;http://hexo.io&quot;&gt;Hexo&lt;/a&gt;&apos;) &#125;&#125;&lt;/div&gt;&lt;div class=&quot;theme-info&quot;&gt; &#123;&#123; __(&apos;footer.theme&apos;) &#125;&#125; - &lt;a class=&quot;theme-link&quot; href=&quot;https://github.com/iissnan/hexo-theme-next&quot;&gt; NexT&#123;% if theme.scheme %&#125;.&#123;&#123; theme.scheme &#125;&#125;&#123;% endif %&#125; &lt;/a&gt;&lt;/div&gt;# 插入到这里&#123;% block footer %&#125;&#123;% endblock %&#125; 显示单页面访问量不蒜子目前是不支持在首页显示每篇博文的计数的，而且NexT主题中，首页文章显示跟具体文章显示会用到同一个模板文件(themes/next/layout/_macro目录下的post.swig文件)，所以我们需要稍微修改一下模板的代码。1&gt;修改themes/next/layout/_macro目录下的post.swig文件位于文件开头,在第三个参数的位置，增加is_pv字段 1&#123;% macro render(post, is_index, is_pv, post_extra_class) %&#125; 插入以下代码，用于区分文章页面跟首页这里不用像”显示站点总访问量”中那样安装脚本，否则会出现重复计数的问题。 12345&#123;% if is_pv %&#125;&lt;span&gt;&amp;nbsp; | &amp;nbsp;&lt;span id=&quot;busuanzi_value_page_pv&quot; &gt;&lt;/span&gt;次阅读&lt;/span&gt; &#123;% endif %&#125; 插入这个位置 12345678910111213141516171819202122&#123;% if post.comments %&#125; &#123;% if (theme.duoshuo and theme.duoshuo.shortname) or theme.duoshuo_shortname %&#125; &lt;span class=&quot;post-comments-count&quot;&gt; &amp;nbsp; | &amp;nbsp; &lt;a href=&quot;&#123;&#123; url_for(post.path) &#125;&#125;#comments&quot; itemprop=&quot;discussionUrl&quot;&gt; &lt;span class=&quot;post-comments-count ds-thread-count&quot; data-thread-key=&quot;&#123;&#123; post.path &#125;&#125;&quot; itemprop=&quot;commentsCount&quot;&gt;&lt;/span&gt; &lt;/a&gt; &lt;/span&gt; &#123;% elseif theme.disqus_shortname %&#125; &lt;span class=&quot;post-comments-count&quot;&gt; &amp;nbsp; | &amp;nbsp; &lt;a href=&quot;&#123;&#123; url_for(post.path) &#125;&#125;#comments&quot; itemprop=&quot;discussionUrl&quot;&gt; &lt;span class=&quot;post-comments-count disqus-comment-count&quot; data-disqus-identifier=&quot;&#123;&#123; post.path &#125;&#125;&quot; itemprop=&quot;commentsCount&quot;&gt;&lt;/span&gt; &lt;/a&gt; &lt;/span&gt; &#123;% endif %&#125; &#123;% endif %&#125; #插入到这里 &lt;/div&gt; &lt;/header&gt; 2&gt;修改themes/next/layout目录下的post.swig文件这个文件是文章的模板找到以下代码，给render方法传入刚才第一步中设置的参数。 1234567891011121314151617&#123;% block content %&#125; &lt;div id=&quot;posts&quot; class=&quot;posts-expand&quot;&gt; #render方法第二个参数is_index为是否为首页 #第三个参数is_pv为我们刚才设置的是否显示计数 &#123;&#123; post_template.render(page, false, true) &#125;&#125; &lt;div class=&quot;post-spread&quot;&gt; &#123;% if theme.jiathis %&#125; &#123;% include &apos;_partials/share/jiathis.swig&apos; %&#125; &#123;% elseif theme.duoshuo_shortname and theme.duoshuo_share %&#125; &#123;% include &apos;_partials/share/duoshuo_share.swig&apos; %&#125; &#123;% endif %&#125; &lt;/div&gt; &lt;/div&gt;&#123;% endblock %&#125; 3&gt;修改themes/next/layout目录下的index.swig文件这个文件是首页的模板找到以下代码，给render方法传入刚才第一步中设置的参数。 1234567891011&#123;% block content %&#125; &lt;section id=&quot;posts&quot; class=&quot;posts-expand&quot;&gt; &#123;% for post in page.posts %&#125; #render方法第二个参数is_index为是否为首页 #第三个参数is_pv为我们刚才设置的是否显示计数 &#123;&#123; post_template.render(post, true, false) &#125;&#125; &#123;% endfor %&#125; &lt;/section&gt; &#123;% include &apos;_partials/pagination.swig&apos; %&#125;&#123;% endblock %&#125; 至此，我们的站点计数功能就做好了~ sitemap插件Sitemap 可方便管理员通知搜索引擎他们网站上有哪些可供抓取的网页，有助于让别人更好地通过搜索到自己的博客。 sitemap安装配置1&gt; 安装 1$ npm install hexo-generator-sitemap --save 2&gt; 修改站点配置文件 123# Extensionsplugins:- hexo-generator-sitemap 使用以下命令后，你可以在站点的/public目录下找到一个sitemap.xml文件，这个文件就是你的站点地图，里面包含你的站点的网页地址。 12hexo cleanhexo g 提交sitemap到google参考如何向google提交sitemap sitemap.xml无法生成问题问题:使用以下命令安装sitemap插件后,按上面步骤配置，执行hexo g命令无法生成sitemap.xml文件。 1$ npm install hexo-generator-sitemap 观察发现博客根目录下的package.json文件中dependencies并没有sitemap插件的依赖。 1234567891011121314151617181920&#123; &quot;name&quot;: &quot;hexo-site&quot;, &quot;version&quot;: &quot;0.0.0&quot;, &quot;private&quot;: true, &quot;hexo&quot;: &#123; &quot;version&quot;: &quot;3.1.1&quot; &#125;, &quot;dependencies&quot;: &#123; &quot;hexo&quot;: &quot;^3.1.0&quot;, &quot;hexo-deployer-git&quot;: &quot;0.0.4&quot;, &quot;hexo-generator-archive&quot;: &quot;^0.1.2&quot;, &quot;hexo-generator-category&quot;: &quot;^0.1.2&quot;, &quot;hexo-generator-index&quot;: &quot;^0.1.2&quot;, &quot;hexo-generator-tag&quot;: &quot;^0.1.1&quot;, &quot;hexo-renderer-ejs&quot;: &quot;^0.1.0&quot;, &quot;hexo-renderer-marked&quot;: &quot;^0.2.4&quot;, &quot;hexo-renderer-stylus&quot;: &quot;^0.3.0&quot;, &quot;hexo-server&quot;: &quot;^0.1.2&quot; &#125;&#125; 解决方法：如果已安装sitemap插件，卸载sitemap插件 1$ npm uninstall hexo-generator-sitemap 安装sitemap插件时，加上- -save参数，如下 1$ npm install hexo-generator-sitemap --save 安装完成后，我们再查看博客根目录下的package.json文件，发现dependencies中已经有了sitemap插件，然后我们再执行hexo g命令，就能够在/public目录下找到一个sitemap.xml文件了。 baidusitemap安装配置普通的Sitemap格式不符合百度的要求，所以我们要安装以下插件1&gt; 安装 1$ npm install hexo-generator-baidu-sitemap --save 2&gt; 修改站点配置文件 1234567# Extensionsplugins:- hexo-generator-sitemap- hexo-generator-baidu-sitemapbaidusitemap: path: baidusitemap.xml 同理，使用以下命令后，你可以在站点的/public目录下找到一个baidusitemap.xml文件。 12hexo cleanhexo g 3&gt; 将baidusitemap.xml提交给百度百度搜索引擎提交入口使用hexo d命令将博客部署到github后,这里填写github上的baidusitemap.xml地址即可。 本文转载自：http://zhiho.github.io/2015/09/29/hexo-next/]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Hexo搭建Github博客（二）- Hexo配置和使用]]></title>
      <url>%2F2016%2F11%2F18%2FHexo%E6%90%AD%E5%BB%BAGithub%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%BA%8C%EF%BC%89-Hexo%E9%85%8D%E7%BD%AE%E5%92%8C%E4%BD%BF%E7%94%A8%2F</url>
      <content type="text"><![CDATA[这篇博文主要介绍Hexo的配置安装和Hexo的常用命令，还有如何部署博客到Github。 前提条件：&gt; 电脑上已配置nodejs环境，因为要用到nodejs的包管理器npm。 Hexo安装打开Git命令行，执行如下命令npm install -g hexo 初始化博客 在电脑上建立自己的博客文件夹（如：D:\Software\Blog，这个目录就是博客根目录），然后在此目录下打开Git Bash，执行如下命令1hexo init 这是会输出 12INFO Copying data e:\HexoINFO You are almost done! Don&apos;t forget to run `npm install` before you start blogging with Hexo! 在博客根目录下会生成以下文件： * _config.yml ——是博客主要配置文件 * db.json——是博客数据库 * node_modules——是NodeJS依赖模块 * source——是博客内容以及其他页面（page）存在的目录，这个目录里面有个_post目录就是我们存放博客内容的地方，也就是存放博客内容markdown文档地方，输入hexo new “newPage”就会在这个目录建立一个名为newPage的子目录，然后在里面放入md文档，并在主题的配置文件里面添加相应栏目newPage，这样就会显示在主页面的目录上。（将在后续有所mark） * themes——是主题存放文件 至此，博客的安装部署工作基本完成了。blog就是你的博客根目录，所有的操作都在里面进行。 Hexo命令生成静态页面1hexo generate（hexo g也可以） 本地启动启动本地服务，进行文章预览调试，命令： 1hexo server （hexo s也可以） 浏览器输入http://localhost:4000/ 即可访问自己的博客（此处是预览效果），按ctrl+c停止。 创建文章启动server后，运行一下命令，可生成一篇文章，刷新http://localhost:4000/ 即可看到新生成的文章。 1hexo new &quot;new_article&quot; 同时在D:\Software\Blog\source_posts目录下生成一个“new_article ”的markdown文件，可以使用markdown语法的编辑器来编辑该文件，刷新http://localhost:4000/在本地查看效果。 生成静态网页1hexo generate 同时在博库根目录下public文件夹中生成静态文件。 部署到Github至此我们可以在本地访问自己的博客了，要部署到github上才能被别人看到。我们在本地调试好文章在推送上去。下面是部署到Github上的过程。 创建github page在自己的github中创建了自己的github page。参考Hexo 搭建Github 博客 （一）- 环境搭建 修改站点配置文件修改博客根目录下_config.yml文件： 1234# Deployment## Docs: http://hexo.io/docs/deployment.htmldeploy: type: 内容改成： 1234deploy: type: git repo: https://github.com/ZhengSY1222/zhengsy1222.github.io.git branch: master 然后执行命令： 1npm install hexo-deployer-git --save 然后执行配置命令： 1hexo deploy 过程中会提示输入你的github的账号和密码，等命令运行完成。然后再浏览器中输入http://zhengsy1222.github.io/就行了（你把zhengsy1222改成你的github账号就行了）。 部署步骤每次部署的步骤，可按以下三步来进行 123hexo clean #删除已经生成的静态页面hexo generatehexo deploy 一些常用命令1234567hexo new&quot;postName&quot; #新建文章hexo new page&quot;pageName&quot; #新建页面hexo generate #生成静态页面至public目录hexo server #开启预览访问端口（默认端口4000，&apos;ctrl + c&apos;关闭server）hexo deploy #将.deploy目录部署到GitHubhexo help # 查看帮助hexo version #查看Hexo的版本 命令简写12345hexo s -g #生成静态文件并启动本地服务hexo n == hexo newhexo g == hexo generatehexo s == hexo serverhexo d == hexo deploy]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Hexo搭建Github博客（一）- 环境搭建]]></title>
      <url>%2F2016%2F11%2F18%2FHexo%E6%90%AD%E5%BB%BAGithub%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%B8%80%EF%BC%89-%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%2F</url>
      <content type="text"><![CDATA[个人看法,github不图谋利，相当于一个数据源库，提供了丰富的数据库自己在做项目的过程中可以借鉴他人的开源代码，使用很方便，可以通过git 实现代码的托管，最重要的是免费使用，速度快而且还稳定，毕竟逼格那么高，就凑合着用吧，一回生，二回熟！！！ 设置Github注册github地址：https://github.com/按照提示注册就可以了，注册成功去验证邮箱。 创建github仓库仓库的名字要和你的账号对应，然后选择Create repositpry 常见成功后，会生成一个链接网址，此网址在后面配置主题时要用到。 安装Git + NodeJS环境安装Git用于推送hexo的内容到github上下载地址：https://git-scm.com/download/win打开效果是这样的： 安装NodeJS用来生成静态网页下载地址：https://nodejs.org/en/安装时保持默认配置就可以了。 进入github page页面设置页面选择settings创建一个默认的页面 直接选择Launch automatic page generator，其他东西都不用修改。 选择一个主题。 查看效果至此，github page已经创建完成，可以访问自己的站点了。如：http://zhengsy1222.github.io/效果就是上一步中你所选的主题，后面我们可以根据自己的喜好选择主题。 我选择的是next主题，后面我将继续介绍next主题的配置。]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>%2F2016%2F10%2F29%2Fhello-world%2F</url>
      <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
    </entry>

    
  
  
</search>
